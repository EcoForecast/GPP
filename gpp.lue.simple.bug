model{

#### PROCESS MODEL ####

# Simplest GPP model
for(t in 1:ntime){
    gpp[t] ~ dnorm(fpar[t] * PAR[t] * lue + eps[t], tau_process)
}

# GPP bias and fpar is a random walk from previous timestep
for(t in 2:ntime){
    eps[t] ~ dnorm(eps[t-1], tau_eps)
    fpar[t] ~ dnorm(fpar[t-1], tau_fpar)
#    fpar[t] <- unlogit(fpar_log[t])
#    fpar_log[t] ~ dnorm(fpar_log[t-1], tau_fpar)
}

#### DATA MODEL ####
for(t in 1:ntime){
    # Flux towers -- estimate observation error
    gpp_flux[t] ~ dnorm(gpp[t], tau_flux)

    # MODIS fpar
    fpar_modis[t] ~ dnorm(fpar[t], tau_modis)

    # SIF
    gpp_sif[t] ~ dnorm(gpp[t], tau_sif)
    sif[t] <- (gpp_sif[t] - b_sif) / m_sif
    sif_oco[t] ~ dnorm(sif[t], tau_oco)
}

#### Priors
tau_process ~ dgamma(a_process, r_process)
lue ~ dlnorm(mu_lue, tau_lue)
eps[1] ~ dnorm(mu_eps_ic, tau_eps_ic)
tau_eps ~ dgamma(a_eps, r_eps)
fpar[1] ~ dbeta(a_fpar_ic, b_fpar_ic)
tau_fpar ~ dgamma(a_fpar, r_fpar)
tau_flux ~ dgamma(a_flux, r_flux)
tau_modis ~ dgamma(a_modis, r_modis)
tau_sif ~ dgamma(a_sif, r_sif)
m_sif ~ dnorm(mu_m_sif, tau_m_sif)
b_sif ~ dnorm(mu_b_sif, tau_b_sif)
tau_oco ~ dgamma(a_oco, r_oco)
}
